{"version":3,"sources":["components/WeatherInfo.js","components/WeatherMenu.js","components/Loading.js","components/App.js","index.js"],"names":["WeatherInfo","props","state","isStopped","isPaused","fecha","Array","getDay","getMonth","getDate","getFullYear","textoFecha","Date","this","descipcion","estado","nieve","tormenta","nubladoLigero","llovizna","nublado","soleado","animationOptions","loop","autoplay","animationData","setAnimation","rendererSettings","preserveAspectRatio","className","ciudad","setDay","options","height","width","Math","floor","temperatura_minima","temperatura_maxima","temperatura","humedad","velocidadViento","proximosDias_1_max","proximosDias_1_min","proximosDias_2_max","proximosDias_2_min","proximosDias_3_max","proximosDias_3_min","proximosDias_4_max","proximosDias_4_min","React","Component","WeatherMenu","id","onClick","getCity","Loading","loading","App","error","dia","setLoading","setState","setCurrentDayTemp","city","a","CITY_URL_DATE","fetch","CITY_INFO_RESPONSE","json","data","title","consolidated_weather","the_temp","min_temp","max_temp","weather_state_name","humidity","wind_speed","setNextDaysTemp","yyyy","mm","dd","cors_api_url","proximosDias","proximosDiasSingle","i","push","mes","a√±o","e","target","cityHash","date","initialCity","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7cf2f7f8.chunk.js","sourcesContent":["import React from 'react'\nimport Lottie from 'react-lottie';\n\nimport './style/WeatherInfo.css'\n\nimport nieve from './animations/nieve.json'\nimport llovizna from './animations/llovizna.json'\nimport nubladoLigero from './animations/nublado-ligero.json'\nimport nublado from './animations/nublado.json'\nimport soleado from './animations/soleado.json'\nimport tormenta from './animations/tormenta.json'\n\n\nclass WeatherInfo extends React.Component{\n\n    setDay() {\n\n        function textoFecha(fecha){\n            var diasSemana = new Array(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\");\n            var diaLetras = diasSemana[fecha.getDay()];\n\n            var meses = new Array(\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\");\n            var mesLetras = meses[fecha.getMonth()];\n            var diaMes = (fecha.getDate());\n            var anho = fecha.getFullYear();\n\n\n            var fechaHoy = diaLetras+ \", \"+ mesLetras + \" \"  + diaMes + \" , \" + anho;\n            return fechaHoy;\n        }\n        var fecha = new Date();\n       return textoFecha(fecha);\n    }\n\n    setAnimation(){\n        var estadoDescipcion = this.props.descipcion\n        switch(estadoDescipcion){\n            case 'Snow' || 'Sleet' || 'Hail':\n            var estado = nieve\n            break;\n            case 'Thunderstorm' || 'Heavy Rain':\n            var estado = tormenta\n            break;\n            case 'Light Rain':\n            var estado = nubladoLigero\n            break;\n            case 'Showers':\n            var estado = llovizna\n            break;\n            case 'Heavy Cloud' || 'Light Cloud':\n            var estado = nublado\n            break;\n            case 'Clear':\n            var estado = soleado\n            break;\n          }\n        return estado\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {isStopped: false, isPaused: false};\n      }\n\n    render(){\n        const animationOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: this.setAnimation(),\n            rendererSettings: {\n              preserveAspectRatio: 'xMidYMid slice'\n            }\n          };\n\n        return (\n        <div className=\"container_WeatherInfo\" >\n            <div className=\"container__weatherinfoCurrentDay\" >\n                <div className=\"header_info\">\n                    <p className=\"city\">{this.props.ciudad}</p>\n                    <div>\n                        <p>{this.setDay()}</p>\n                    </div>\n                    <div>\n                        <p>{this.props.descipcion}</p>\n                    </div>\n                    <Lottie\n                        options={animationOptions}\n                        height={150}\n                        width={150}\n                        isStopped={this.state.isStopped}\n                        isPaused={this.state.isPaused}/>\n                </div>\n                <div className=\"container__temp\">\n                    <div className=\"container__temp-minmax\">\n                        <p>Min {Math.floor(this.props.temperatura_minima)}</p>\n                        <p>Max {Math.floor(this.props.temperatura_maxima)}</p>\n                    </div>\n                    <div className=\"container__currenttemp\">\n                        <p className=\"currentTemp\">{Math.floor(this.props.temperatura)}</p>\n                    </div>\n                    <div className=\"container__hum\">\n                        <p>Hum {Math.floor(this.props.humedad)}</p>\n                        <p>Wind S. {Math.floor(this.props.velocidadViento)}</p>\n                    </div>\n                </div>\n            </div>\n            <div className=\"container__nextDays\">\n                <div>\n                    <p className=\"container__nextDays-day\">10</p>\n                    <p>{Math.floor(this.props.proximosDias_1_max)}</p>\n                    <p>{Math.floor(this.props.proximosDias_1_min)}</p>\n                </div>\n                <span className=\"separador\"></span>\n                <div>\n                    <p className=\"container__nextDays-day\">11</p>\n                    <p>{Math.floor(this.props.proximosDias_2_max)}</p>\n                    <p>{Math.floor(this.props.proximosDias_2_min)}</p>\n                </div>\n                <span className=\"separador\"></span>\n                <div>\n                    <p className=\"container__nextDays-day\">12</p>\n                    <p>{Math.floor(this.props.proximosDias_3_max)}</p>\n                    <p>{Math.floor(this.props.proximosDias_3_min)}</p>\n                </div>\n                <span className=\"separador\"></span>\n                <div>\n                    <p className=\"container__nextDays-day\">13</p>\n                    <p>{Math.floor(this.props.proximosDias_4_max)}</p>\n                    <p>{Math.floor(this.props.proximosDias_4_min)}</p>\n                </div>\n            </div>\n        </div>\n    )}\n}\n\nexport default WeatherInfo;","import React from 'react'\n\nimport './style/WeatherMenu.css'\n\nconst WeatherMenu = props => {\n\n    return (\n        <div className=\"card card-body\">\n            <div className='container'>\n                <p  id=\"madrid\" onClick={props.getCity}>Madrid</p>\n                <p id=\"london\" onClick={props.getCity}>Londres</p>\n                <p id=\"sanFrancisco\" onClick={props.getCity}>San Francisco</p>\n                <p id=\"newYork\" onClick={props.getCity}>Nueva York</p>\n            </div>\n        </div>\n    )\n}\n\nexport default WeatherMenu","import React from 'react'\nimport Lottie from 'react-lottie';\n\nimport './style/WeatherInfo.css'\n\nimport loading from './animations/27-loading.json'\n\n\nclass Loading extends React.Component{\n\n    setDay() {\n\n        function textoFecha(fecha){\n            var diasSemana = new Array(\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\");\n            var diaLetras = diasSemana[fecha.getDay()];\n\n            var meses = new Array(\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\");\n            var mesLetras = meses[fecha.getMonth()];\n            var diaMes = (fecha.getDate());\n            var anho = fecha.getFullYear();\n\n\n            var fechaHoy = diaLetras+ \", \"+ mesLetras + \" \"  + diaMes + \" , \" + anho;\n            return fechaHoy;\n        }\n        var fecha = new Date();\n       return textoFecha(fecha);\n    }\n\n\n    constructor(props) {\n        super(props);\n        this.state = {isStopped: false, isPaused: false};\n      }\n\n    render(){\n        const animationOptions = {\n            loop: true,\n            autoplay: true,\n            animationData: loading,\n            rendererSettings: {\n              preserveAspectRatio: 'xMidYMid slice'\n            }\n          };\n\n        return (\n        <div className=\"container_WeatherInfo\" >\n            <div className=\"container__weatherinfoCurrentDay\" >\n                <div className=\"header_info\">\n                    <p className=\"city\">Loading</p>\n                    <div>\n                        <p></p>\n                    </div>\n                    <div>\n                        <p></p>\n                    </div>\n                    <Lottie\n                        options={animationOptions}\n                        height={150}\n                        width={150}\n                        isStopped={this.state.isStopped}\n                        isPaused={this.state.isPaused}/>\n                </div>\n                <div className=\"container__temp\">\n                    <div className=\"container__temp-minmax\">\n                        <p></p>\n                        <p></p>\n                    </div>\n                    <div className=\"container__currenttemp\">\n                        <p className=\"currentTemp\"></p>\n                    </div>\n                    <div className=\"container__hum\">\n                        <p></p>\n                        <p></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )}\n}\n\nexport default Loading;","import React, { Component } from 'react';\n\nimport './style/App.css';\nimport WeatherInfo from './WeatherInfo';\nimport WeatherMenu from './WeatherMenu';\nimport Loading from './Loading';\n\nclass App extends Component {\n\n  state = {\n    temperatura: '',\n    temperatura_minima: '',\n    temperatura_maxima: '',\n    descipcion: '',\n    ciudad: '',\n    error: '',\n    dia: ({\n      dia: ''\n    }),\n    loading: true\n  }\n\n  setLoading = () =>{\n    this.setState({\n      loading: true\n    })\n  }\n\n  setCurrentDayTemp = async city =>{\n\n    var cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n    //Llamada a la API para traer los datos de la ciudad seleccionada\n    const CITY_URL_DATE = `${cors_api_url}https://www.metaweather.com/api/location/${city}`\n    const CITY_INFO_RESPONSE =  await fetch(CITY_URL_DATE)\n    const data = await CITY_INFO_RESPONSE.json();\n\n    this.setState({\n      ciudad: data.title,\n      temperatura: data.consolidated_weather[0].the_temp,\n      temperatura_minima: data.consolidated_weather[0].min_temp,\n      temperatura_maxima: data.consolidated_weather[0].max_temp,\n      descipcion: data.consolidated_weather[0].weather_state_name,\n      humedad: data.consolidated_weather[0].humidity,\n      velocidadViento: data.consolidated_weather[0].wind_speed\n    })\n  }\n\n  setNextDaysTemp = async (city, yyyy, mm, dd) =>{\n      var cors_api_url = 'https://cors-anywhere.herokuapp.com/';\n    //Llamada a la API para traer los datos de la ciudad seleccionada los pr√≥ximos 4 d√≠as\n    var proximosDias = [];\n    var proximosDiasSingle = []\n\n    for(var i = 1; i<=4; i ++){\n      const CITY_URL_DATE = `${cors_api_url}https://www.metaweather.com/api/location/${city}/${yyyy}/${mm}/${dd + i}`\n      const CITY_INFO_RESPONSE =  await fetch(CITY_URL_DATE)\n      const data = await CITY_INFO_RESPONSE.json();\n      proximosDiasSingle.push(data)\n    }\n\n    proximosDias = proximosDiasSingle;\n\n    var dia = ({\n      dia: dd,\n      mes: mm,\n      a√±o: yyyy,\n    })\n\n    this.setState({\n        proximosDias_1_max: proximosDias[0][0].max_temp,\n        proximosDias_1_min: proximosDias[0][0].min_temp,\n        proximosDias_2_max: proximosDias[1][1].max_temp,\n        proximosDias_2_min: proximosDias[1][1].min_temp,\n        proximosDias_3_max: proximosDias[2][2].max_temp,\n        proximosDias_3_min: proximosDias[2][2].min_temp,\n        proximosDias_4_max: proximosDias[3][3].max_temp,\n        proximosDias_4_min: proximosDias[3][3].min_temp,\n        loading: false,\n        dia: dia,\n      })\n  }\n\n  getCity = async e => {\n      const city = e.target.id;\n\n      switch(city){\n        case 'madrid':\n        var cityHash = 766273\n        break;\n        case 'london':\n        var cityHash = 44418\n        break;\n        case 'sanFrancisco':\n        var cityHash = 2487956\n        break;\n        case 'newYork':\n        var cityHash = 2459115\n        break;\n      }\n\n      var date = new Date()\n      var dd = date.getDate();\n      var mm = date.getMonth()+1;\n      var yyyy = date.getFullYear();\n\n      var dia = ({\n        dia: dd,\n        mes: mm,\n        a√±o: yyyy\n      })\n\n      this.setCurrentDayTemp(cityHash);\n      this.setNextDaysTemp(cityHash, yyyy, mm, dd)\n\n        this.setState({\n            dia: dia,\n          })\n  }\n\n  initialCity = async () =>¬†{\n      var city = 766273;\n      var date = new Date()\n      var dd = date.getDate();\n      var mm = date.getMonth()+1;\n      var yyyy = date.getFullYear();\n\n      this.setNextDaysTemp(city, yyyy, mm, dd)\n      this.setCurrentDayTemp(city)\n\n  }\n\n  render(){\n    if(this.state.loading === true){\n      this.initialCity();\n      return(\n        <div>\n          <WeatherMenu getCity={this.getCity} city={this.city} />\n          <Loading {... this.state}/>\n        </div>\n      )\n    }\n    return(\n      <div>\n        <WeatherMenu getCity={this.getCity} city={this.city} />\n        <WeatherInfo {...this.state}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}